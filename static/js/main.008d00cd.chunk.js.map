{"version":3,"sources":["component/NavBar/NavBar.module.css","component/UI/Input/Input.module.css","container/SignIn/SignIn.module.css","container/SignUp/SignUp.module.css","container/PostProduct/PostProduct.module.css","container/Products/Products.module.css","component/UI/Spinner/Spinner.module.css","component/UI/Button/Button.module.css","component/Layout/Layout.module.css","component/NavBar/NavItems/NavItems.module.css","component/NavBar/NavItems/NavItem/NavItem.module.css","component/NavBar/NavItems/NavButton/NavButton.module.css","component/Product/Product.module.css","assets/comment.svg","assets/arrow_up.svg","component/Product/Product.js","store/actions/actionTypes.js","store/actions/auth.js","component/UI/Spinner/Spinner.js","container/Products/Products.js","component/UI/Input/Input.js","component/UI/Button/Button.js","hoc/Auxillary/Auxillary.js","container/SignUp/SignUp.js","component/NavBar/NavItems/NavItem/NavItem.js","component/NavBar/NavItems/NavItems.js","component/NavBar/NavItems/NavButton/NavButton.js","component/NavBar/NavBar.js","component/Layout/Layout.js","container/PostProduct/PostProduct.js","container/SignIn/SignIn.js","App.js","reportWebVitals.js","store/reducers/auth.js","index.js"],"names":["module","exports","Product","props","initial","newThumbnail","thumbnail","className","classes","Initial","title","ProductImgCountainer","ProductInfo","Title","Caption","caption","ProductCommentSection","ProductComment","src","Comment","alt","Number","comments","ProductCategory","Topics","topics","ProductVote","Arrow_Up","total_upvotes","REDIRECT","RESET_REDIRECT","AUTH_SUCCESSFUL","AUTH_FAIL","redirect","path","type","actionTypes","redirectLink","resetRedirect","authSuccessful","token","spinner","Loader","Products","state","products","loading","topicsHandler","id","key","this","onResetRedirected","setState","axios","get","then","response","console","log","data","catch","err","Spinner","map","product","name","Component","connect","dispatch","actions","Input","inputElement","inputClasses","InputElement","elementType","join","elementConfig","value","onChange","changed","options","displayValue","Label","label","Small","errmsg","Button","children","Aux","toast","configure","SignUp","signUpForm","username","placeholder","required","email","email2","password","onchangeHandler","event","element","updatedSignUpForm","updatedSignUpElement","target","onSubmitHandler","preventDefault","passwordValue","confirmEmail","copiedSignupForm","length","copiedpasswordConfig","copiedconfirmEmailConfig","userData","post","notify","setTimeout","onRedirect","errorHandler","errorObject","copiedSignUpForm","copiedFormElement","success","formElement","push","config","formElements","ButtonContainer","form","SignUpForm","onSubmit","redirected","to","redirectlink","SignUpContainer","link","NavItem","NavItems","NavButton","styleName","authenticated","otherSide","NavButtons","Header","NavAside","Logo","Layout","Main","PostProduct","productForm","url","download_link","status","image","twitter_url","content","copiedProductForm","copiedProductElement","files","onSubmitProduct","formData","FormData","append","headers","Authorization","error","formBody","ProductForm","redirectPath","formContainer","SignIn","signInForm","errMessageServer","copiedErrorMessage","copiedSignInForm","copiedchangedElement","loginDetails","localStorage","setItem","onAuthSuccessfull","non_field_errors","onRedirectReset","redirectElement","SignInForm","FormContainer","App","getItem","onAuthSuccessful","onAuthFail","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","action","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.008d00cd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"NavBar_Header__2B9tv\",\"NavAside\":\"NavBar_NavAside__tPXaJ\",\"Logo\":\"NavBar_Logo__36Nyi\",\"Initial\":\"NavBar_Initial__3PHx9\",\"NavButtons\":\"NavBar_NavButtons__2IRBQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__xHPk9\",\"InputElement\":\"Input_InputElement__1TsV4\",\"Label\":\"Input_Label__1BJHL\",\"Small\":\"Input_Small__3f9_S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormContainer\":\"SignIn_FormContainer__3izq7\",\"SignInForm\":\"SignIn_SignInForm__32ZE0\",\"ButtonContainer\":\"SignIn_ButtonContainer__15kAR\",\"Small\":\"SignIn_Small__3iPIA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SignUpContainer\":\"SignUp_SignUpContainer__3fuMp\",\"SignUpForm\":\"SignUp_SignUpForm__TirGk\",\"ButtonContainer\":\"SignUp_ButtonContainer__1iK4W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"PostProduct_formContainer__1b4qd\",\"ProductForm\":\"PostProduct_ProductForm__2nMlS\",\"ButtonContainer\":\"PostProduct_ButtonContainer__nnP-a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Products\":\"Products_Products__1XqWs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__yXb3S\",\"load2\":\"Spinner_load2__GH1ff\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__KpCjc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Layout_Main__27TJZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavItems\":\"NavItems_NavItems__2gxqj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavItem\":\"NavItem_NavItem__223Zg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SignIn\":\"NavButton_SignIn__2qjT8\",\"SignUp\":\"NavButton_SignUp__2d9GB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Product\":\"Product_Product__2P1J5\",\"ProductImgCountainer\":\"Product_ProductImgCountainer__2aTV5\",\"Initial\":\"Product_Initial__Qn4Dd\",\"ProductInfo\":\"Product_ProductInfo__1PUEH\",\"Title\":\"Product_Title__1BL1r\",\"Caption\":\"Product_Caption__XvsdN\",\"Number\":\"Product_Number__ASgP7\",\"Topics\":\"Product_Topics__3MlTa\",\"ProductCommentSection\":\"Product_ProductCommentSection__3Yqlm\",\"ProductComment\":\"Product_ProductComment__3qq7B\",\"ProductVote\":\"Product_ProductVote__1ec_s\"};","export default __webpack_public_path__ + \"static/media/comment.879cb292.svg\";","export default __webpack_public_path__ + \"static/media/arrow_up.3111010d.svg\";","import React from 'react';\r\n\r\n\r\nimport classes from './Product.module.css';\r\n// import ProductImage from '../../assets/mug.jpg';\r\nimport Comment from '../../assets/comment.svg';\r\nimport Arrow_Up from '../../assets/arrow_up.svg';\r\n\r\nconst Product = (props) => {\r\n    const initilaHanhler = (initial) => {\r\n         let [firstInitial] = initial;\r\n         return firstInitial;\r\n    }\r\n    let newThumbnail = null;\r\n    if(props.thumbnail ){\r\n        newThumbnail = (<div className = {classes.Initial}>\r\n            <h2>{initilaHanhler(props.title)}</h2>\r\n        </div>)\r\n    }   \r\n    return (\r\n        <div className = {classes.Product}>\r\n                <div className = {classes.ProductImgCountainer}>\r\n                    {/* <img src = {props.thumbnail} alt = 'Product'/> */}\r\n                    {newThumbnail}\r\n                </div>\r\n                <div className = {classes.ProductInfo}>\r\n                    <div>\r\n                        <h2 className = {classes.Title}>{props.title}</h2>\r\n                        <p className = {classes.Caption}>{props.caption}</p>\r\n                    </div>\r\n                    <div className = {classes.ProductCommentSection}>\r\n                        <div className = {classes.ProductComment}>\r\n                            <img src={Comment} alt='Comment'/>\r\n                            <p className = {classes.Number}>{props.comments}</p>\r\n                        </div>\r\n                        <div className = {classes.ProductCategory}>\r\n                            <p className = {classes.Topics}>{props.topics}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className = {classes.ProductVote}>\r\n                    <img src={Arrow_Up} alt = \"Vote\"/>\r\n                    <p className = {classes.Number}>{props.total_upvotes}</p>\r\n                </div>     \r\n            </div>\r\n    );\r\n}\r\n\r\nexport default Product;","export const REDIRECT = 'REDIRECT';\r\nexport const RESET_REDIRECT = 'RESET_REDIRECT';\r\n\r\nexport const AUTH_SUCCESSFUL = 'AUTH_SUCCESSFUL';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';","import * as actionTypes from './actionTypes';\r\n\r\nexport const redirect = ( path ) => {\r\n    return {\r\n        type: actionTypes.REDIRECT,\r\n        redirectLink: path\r\n    }\r\n}\r\n\r\nexport const resetRedirect = (  ) => {\r\n    return {\r\n        type: actionTypes.RESET_REDIRECT\r\n    }\r\n}\r\n\r\nexport const authSuccessful = ( token ) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESSFUL,\r\n        token: token\r\n    }\r\n}\r\n\r\nexport const authFail = () => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL\r\n    }\r\n}","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\n\r\nconst spinner = () => (\r\n    <div className ={classes.Loader}>Loading....</div>\r\n);\r\n\r\nexport default spinner;","import React, { Component } from 'react';\r\nimport classes from './Products.module.css';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\n\r\nimport Product from '../../component/Product/Product';\r\nimport * as actions from '../../store/actions/index';\r\nimport Spinner from '../../component/UI/Spinner/Spinner';\r\n\r\nclass Products extends Component {\r\n    state = {\r\n        products: [],\r\n        loading: false\r\n    }\r\n    componentDidMount() {\r\n        this.props.onResetRedirected();\r\n        this.setState({loading: true})\r\n        axios.get('https://restapi-4u.herokuapp.com')\r\n        .then(response => {\r\n            console.log(response);\r\n            // const updatedProducts = [...this.state.products];\r\n            // updatedProducts = response.data;\r\n            this.setState({products: response.data});\r\n            this.setState({loading: false})\r\n        }) \r\n        .catch(err => {\r\n            this.setState({loading: false})\r\n        })\r\n    }\r\n\r\n    topicsHandler = ( id ) => {\r\n        const topics = {'1': 'IT and Software', \r\n                        '2': 'Design', \r\n                        '3': 'Personal Development', \r\n                        '4': 'Marketing', \r\n                        '5': 'Music', \r\n                        '6': 'Cloud'}\r\n\r\n        for(let key in topics) {\r\n            if(key === id) {\r\n                return topics[key]\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    render () {\r\n\r\n        let productBody = null;\r\n\r\n        if(!this.state.loading) {\r\n            productBody = (<div className = {classes.Products}>\r\n                     {this.state.products.map((product) => {\r\n                    return (\r\n                        <Product key = {product.id}\r\n                         title = {product.name}\r\n                         caption = {product.caption}\r\n                         thumbnail = {product.thumbnail}\r\n                         topics = {this.topicsHandler(product.topics[0])}\r\n                         total_upvotes = {product.total_upvotes}\r\n                         comments = {product.comments}/>\r\n                    )\r\n                })}\r\n            </div>)\r\n        }\r\n        else {\r\n            productBody = <Spinner />\r\n        }\r\n        return (\r\n           productBody\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onResetRedirected: () => dispatch(actions.resetRedirect())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Products);","import React from 'react';\r\n\r\n\r\nimport classes from './Input.module.css';\r\n\r\nconst Input = (props) => {\r\n    let inputElement = null;\r\n\r\n    let  inputClasses = [classes.InputElement];\r\n\r\n\r\n    switch (props.elementType) {\r\n        case ('input'):\r\n            inputElement = <input className = {inputClasses.join(' ')} {...props.elementConfig} value = {props.value} \r\n            onChange = {props.changed}/>;\r\n            break;\r\n        case ('textarea'):\r\n            inputElement = <textarea className = {inputClasses.join(' ')} {...props.elementConfig} value = {props.value}\r\n            onChange = {props.changed}/>;\r\n            break;\r\n        \r\n        case ('file'):\r\n            inputElement = <input className = {inputClasses.join(' ')} {...props.elementConfig} value = {props.value}\r\n            onChange = {props.changed}/>;\r\n            break;\r\n        case ('select'): \r\n            inputElement = (<select className = {inputClasses.join(' ')} onChange = {props.changed} >\r\n                {props.elementConfig.options.map((options) => {\r\n                    return <option key = {options.value} value= {options.value} >{options.displayValue}</option>\r\n                })}\r\n            </select>)\r\n            break;\r\n        default: \r\n        inputElement = <input className ={inputClasses.join(' ')} {...props.elementConfig} value = {props.value}/>\r\n    }\r\n\r\n    return (\r\n        <div className = {classes.Input}>\r\n            <label className = {classes.Label}> {props.label} </label>\r\n            {inputElement}\r\n            <small className = {classes.Small}>{props.errmsg}</small>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\n\r\nimport classes from './Button.module.css';\r\n\r\nconst Button = (props) => {\r\n    return (\r\n        <button className = {classes.Button}>\r\n            {props.children}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Button;","const Aux = (props) => props.children;\r\n\r\nexport default Aux;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom'\r\nimport {ToastContainer, toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { connect } from 'react-redux';\r\n\r\nimport classes from './SignUp.module.css';\r\nimport Input from '../../component/UI/Input/Input';\r\nimport Button from '../../component/UI/Button/Button';\r\nimport Spinner from '../../component/UI/Spinner/Spinner';\r\nimport Aux from '../../hoc/Auxillary/Auxillary';\r\nimport * as actions from '../../store/actions/index';\r\n\r\ntoast.configure();\r\nclass SignUp extends Component {\r\n    state = {\r\n        signUpForm: {\r\n            username: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Name',\r\n                    required: true\r\n                },\r\n                value: '',\r\n                errmsg: '',\r\n                label: 'Username'\r\n            },\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Your Email',\r\n                    required: true\r\n                },\r\n                value: '',\r\n                errmsg: '',\r\n                label: 'Email'\r\n            },\r\n            email2: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Confirm Email',\r\n                    required: true\r\n                },\r\n                value: '',\r\n                errmsg: '',\r\n                label: 'Confirm Email'\r\n            },\r\n            password: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'password',\r\n                    placeholder: 'Password',\r\n                    required: true\r\n                },\r\n                value: '',\r\n                errmsg: '',\r\n                label: 'Password'\r\n            }\r\n        },\r\n        loading: false\r\n    }\r\n\r\n    \r\n    onchangeHandler = (event, element) => {\r\n        const updatedSignUpForm = {...this.state.signUpForm};\r\n\r\n        const updatedSignUpElement = {...updatedSignUpForm[element]};\r\n\r\n        updatedSignUpElement.value = event.target.value;\r\n        updatedSignUpElement.errmsg = '';\r\n\r\n        updatedSignUpForm[element] = updatedSignUpElement;\r\n\r\n        this.setState({signUpForm: updatedSignUpForm});\r\n    } \r\n\r\n    onSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        let passwordValue = this.state.signUpForm.password.value;\r\n        let confirmEmail = this.state.signUpForm.email2.value;\r\n        let email = this.state.signUpForm.email.value\r\n\r\n        const copiedSignupForm = {...this.state.signUpForm};\r\n        \r\n        if((passwordValue.length < 8) || (email !== confirmEmail)) {\r\n            if(passwordValue.length < 8) {\r\n                const copiedpasswordConfig = {...copiedSignupForm.password};\r\n                copiedpasswordConfig.errmsg = 'Password must be up to 8 characters or more';\r\n                copiedSignupForm.password = copiedpasswordConfig;\r\n                this.setState({signUpForm: copiedSignupForm});\r\n            }\r\n    \r\n            if((email !== confirmEmail)) {\r\n                const copiedconfirmEmailConfig = {...copiedSignupForm.confirmEmail};\r\n                copiedconfirmEmailConfig.errmsg = 'Must match with Email';\r\n                copiedSignupForm.confirmEmail = copiedconfirmEmailConfig;\r\n                this.setState({signUpForm: copiedSignupForm});\r\n            }\r\n            \r\n        } else {\r\n            let userData = {\r\n                \"username\": this.state.signUpForm.username.value,\r\n                \"email\": this.state.signUpForm.email.value,\r\n                \"email2\": this.state.signUpForm.email2.value,\r\n                \"password\": this.state.signUpForm.password.value\r\n            }\r\n            \r\n            this.setState({loading: true});\r\n            axios.post('https://restapi-4u.herokuapp.com/register/', userData)\r\n            .then((response) => {\r\n                this.notify();\r\n                setTimeout(() => {\r\n                    this.setState({loading: false});\r\n                    this.props.onRedirect('./signin');\r\n                }, 5000)\r\n            })\r\n            .catch((err) => {\r\n                this.setState({loading: false});\r\n                if(err.response.data) {\r\n                    this.errorHandler(err.response.data);\r\n                }\r\n                \r\n            })\r\n\r\n            // axios.get('https://restapi-4u.herokuapp.com/')\r\n            // .then((response) => {\r\n            //     console.log(response)\r\n            // })\r\n            // .catch((err) => {\r\n            //     console.log(err)\r\n            // })\r\n        }\r\n    }\r\n\r\n    errorHandler = (errorObject) => {\r\n        for(let key in errorObject) {\r\n            const copiedSignUpForm = {...this.state.signUpForm};\r\n            const copiedFormElement = {...copiedSignUpForm[key]};\r\n            copiedFormElement.errmsg = errorObject[key];\r\n            copiedSignUpForm[key] = copiedFormElement;\r\n            this.setState({signUpForm: copiedSignUpForm});\r\n        }\r\n    }\r\n\r\n    notify = () => toast.success(\"REGISTRATION SUCCESSFUL!! \");\r\n\r\n\r\n    render () { \r\n        let formElement = [];\r\n\r\n        for(let key in this.state.signUpForm) {\r\n            formElement.push({\r\n                id: key,\r\n                config: this.state.signUpForm[key]\r\n            })\r\n        }\r\n        let formElements = null;\r\n        if(!this.state.loading) {\r\n            formElements = (<Aux>{formElement.map((formElement) => {\r\n                return <Input \r\n                        key = {formElement.id}\r\n                        value = {formElement.config.value}\r\n                        changed = {(event) => this.onchangeHandler(event, formElement.id)}\r\n                        elementConfig = {formElement.config.elementConfig}\r\n                        elementType = {formElement.config.elementType}\r\n                        label = {formElement.config.label}\r\n                        errmsg = {formElement.config.errmsg}\r\n                        />\r\n                })}\r\n                <div className = {classes.ButtonContainer}>\r\n                    <Button>Sign Up</Button>\r\n                </div></Aux>)\r\n        } else {\r\n            formElements = <Spinner />\r\n        }\r\n       \r\n\r\n        let form = (\r\n            <form className = {classes.SignUpForm} onSubmit = {this.onSubmitHandler}>\r\n                <h2>Sign Up</h2>\r\n                {formElements}\r\n            </form>\r\n        )\r\n\r\n        let redirect = null;\r\n        if(this.props.redirected) {\r\n            redirect = <Redirect to = {this.props.redirectlink}/>\r\n        }\r\n        return (\r\n            <div className = {classes.SignUpContainer}>\r\n                {redirect}\r\n                {form}\r\n                <ToastContainer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        redirectlink: state.redirectLink,\r\n        redirected: state.redirected\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onRedirect: (link) => dispatch(actions.redirect(link))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React from 'react';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport classes from './NavItem.module.css';\r\n\r\nconst NavItem = (props) => {\r\n    return (\r\n        <li className = {classes.NavItem}>\r\n            <NavLink to = {props.link}>\r\n                {props.children}\r\n            </NavLink>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default NavItem;","import React from 'react';\r\nimport classes from './NavItems.module.css';\r\nimport NavItem from './NavItem/NavItem';\r\n\r\nconst NavItems = (props) => {\r\n    return (\r\n        <ul className = {classes.NavItems}>\r\n            <NavItem link = '/'>Products</NavItem>\r\n            <NavItem link = '/post-product'>Post Product</NavItem>\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default NavItems;","import  React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport classes from './NavButton.module.css';\r\n\r\nconst NavButton = (props) => {\r\n    return (\r\n        <NavLink className = {classes[props.styleName]} to = {props.link}>\r\n            {props.children}\r\n        </NavLink>\r\n    );\r\n}\r\n\r\nexport default NavButton;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport classes from './NavBar.module.css';\r\nimport NavItems from './NavItems/NavItems';\r\nimport NavButton from './NavItems/NavButton/NavButton';\r\n\r\n\r\nconst NavBar = (props) => {\r\n\r\n    let otherSide = null;\r\n    if(!props.authenticated) {\r\n        otherSide = (\r\n            <div className = {classes.NavButtons}>\r\n                <NavButton link = '/signin' styleName = 'SignIn'>Sign In</NavButton>\r\n                <NavButton link = '/signup' styleName = 'SignUp'>Sign Up</NavButton>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <header className = {classes.Header}>\r\n            <div className = {classes.NavAside}>\r\n                <div className = {classes.Logo}>\r\n                    <div className = {classes.Initial}>\r\n                        <h1>P</h1>\r\n                    </div>\r\n                    <h1>Hunt</h1>\r\n                </div>\r\n                <NavItems />\r\n            </div>\r\n            {otherSide}\r\n        </header>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        authenticated: state.authenticated\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(NavBar);","import React from 'react';\r\n\r\nimport classes from './Layout.module.css';\r\nimport Aux from '../../hoc/Auxillary/Auxillary';\r\nimport NavBar from '../NavBar/NavBar';\r\n\r\nconst Layout = (props) => {\r\n    return (\r\n        <Aux>\r\n            <NavBar />\r\n            <main className = {classes.Main}>\r\n                {props.children}\r\n            </main>\r\n        </Aux>\r\n    );\r\n}\r\n\r\nexport default Layout","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport Input from '../../component/UI/Input/Input';\r\nimport Button from '../../component/UI/Button/Button';\r\nimport classes from './PostProduct.module.css';\r\nimport * as actions from '../../store/actions/index';\r\nimport Spinner from '../../component/UI/Spinner/Spinner';\r\nimport Aux from '../../hoc/Auxillary/Auxillary';\r\n\r\ntoast.configure();\r\nclass PostProduct extends Component {\r\n\r\n    state = {\r\n        productForm: {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Product Name',\r\n                    required: true\r\n                },\r\n                value: '',\r\n                label: 'Product Name:'\r\n            },\r\n            url: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'url',\r\n                    placeholder: 'Product Url',\r\n                    required: true\r\n                },\r\n                value: '',\r\n                label: 'Product Url:'\r\n            },\r\n            caption: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Product Caption',\r\n                    required: true\r\n                },\r\n                value: '',\r\n                label: 'Product Caption:'\r\n            },\r\n            download_link: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'url',\r\n                    placeholder: 'Product Download Link'\r\n                },\r\n                value: '',\r\n                label: 'Product Download Link:'\r\n            },\r\n            status: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [\r\n                        {value: 'S', displayValue: 'Private'},\r\n                        {value: 'P', displayValue: 'Public'},\r\n                        {value: 'I', displayValue: 'In Progress'}\r\n                    ]\r\n                },\r\n                value: 'S',\r\n                label: 'Product Status:'\r\n            }, \r\n            topics: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [\r\n                        {value: '1', displayValue: 'IT and Software'},\r\n                        {value: '2', displayValue: 'Design'},\r\n                        {value: '3', displayValue: 'Personal Development'},\r\n                        {value: '4', displayValue: 'Marketing'},\r\n                        {value: '5', displayValue: 'Music'},\r\n                        {value: '6', displayValue: 'Cloud'}\r\n                    ],\r\n                },\r\n                value: '1',\r\n                label: 'Product Topics:'\r\n            },\r\n            thumbnail: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'file',\r\n                    placeholder: 'Product Thumbnail'\r\n                },\r\n                value: '',\r\n                image: null,\r\n                label: 'Product Thumbnail:'\r\n            },\r\n            twitter_url: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'url',\r\n                    placeholder: 'Twitter Url'\r\n                },\r\n                value: '',\r\n                label: 'Twitter Url:'\r\n            }, \r\n            content: {\r\n                elementType: 'textarea',\r\n                elementConfig: {\r\n                    placeholder: 'Product Description',\r\n                    required: true\r\n                },\r\n                value: '',\r\n                label: 'Product Description:'\r\n            }\r\n        },\r\n        loading: false\r\n    }\r\n\r\n\r\n    onchangeHandler = (event, element) => {\r\n        const copiedProductForm = {...this.state.productForm}\r\n        const copiedProductElement = {...copiedProductForm[element]}\r\n\r\n        // if(element === 'product_topics'){\r\n        //     if(!copiedProductElement.value.includes(event.target.value)) {\r\n        //         const newValueArray = [...copiedProductElement.value]\r\n        //         newValueArray.push(event.target.value);\r\n        //         console.log(event.target.value);\r\n        //         copiedProductElement.value = newValueArray;\r\n        //         copiedProductForm[element] = copiedProductElement;\r\n        //         this.setState({productForm: copiedProductForm});\r\n        //     }\r\n        //     else {\r\n        //         // let valueIndex = copiedProductElement.value.findIndex((value) => {\r\n        //         //     return value === event.target.value;\r\n        //         // });\r\n        //         // console.log(valueIndex);\r\n        //     }\r\n        // }\r\n        // else {\r\n            if(element === 'thumbnail') {\r\n                copiedProductElement.image = event.target.files[0];\r\n                copiedProductElement.value = event.target.value;\r\n                copiedProductForm[element] = copiedProductElement;\r\n                this.setState({productForm: copiedProductForm});\r\n            }\r\n            else{\r\n                copiedProductElement.value = event.target.value;\r\n                copiedProductForm[element] = copiedProductElement;\r\n                this.setState({productForm: copiedProductForm});\r\n            }\r\n            \r\n        // }\r\n    }\r\n\r\n    onSubmitProduct = (event) => {\r\n        event.preventDefault();\r\n        this.setState({loading: true})\r\n        const formData = new FormData ();\r\n        formData.append('name', this.state.productForm.name.value);\r\n        formData.append('url', this.state.productForm.url.value);\r\n        formData.append('caption', this.state.productForm.caption.value);\r\n        formData.append('download_link', this.state.productForm.download_link.value);\r\n        formData.append('status', this.state.productForm.status.value);\r\n        formData.append('topics', [this.state.productForm.topics.value]);\r\n        formData.append('content', this.state.productForm.content.value);\r\n        formData.append('twitter_url', this.state.productForm.twitter_url.value);\r\n        if(this.state.productForm.thumbnail.image) {\r\n            formData.append('thumbnail', this.state.productForm.thumbnail.image)\r\n        }\r\n        \r\n\r\n        const url = 'https://restapi-4u.herokuapp.com/product/create/';\r\n        axios.post(url, formData, {\r\n            headers: {\r\n                Authorization: `token ${this.props.token}`,\r\n                'content-type': 'multipart/form-data'\r\n            }\r\n            \r\n        })\r\n        .then((response) => {\r\n            this.notify();\r\n            setTimeout(() => {\r\n                this.setState({loading: false})\r\n                this.props.onRedirect('/')\r\n            },5000)\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n            this.setState({loading: false})\r\n        })\r\n    }\r\n\r\n    notify = () => toast.success(\"Product Successfully Created!! \");\r\n\r\n    render () {\r\n\r\n        const productForm = [];\r\n\r\n        for(let key in this.state.productForm) {\r\n            productForm.push({\r\n                id: key,\r\n                config: this.state.productForm[key]\r\n            })\r\n        }\r\n\r\n        let formBody = null;\r\n        \r\n        if(!this.state.loading) {\r\n            formBody = (\r\n                <Aux>\r\n                    {productForm.map((formElement) => {\r\n                    return <Input \r\n                    key = {formElement.id}\r\n                    elementType = {formElement.config.elementType}\r\n                    elementConfig = {formElement.config.elementConfig}\r\n                    value = {formElement.config.value}\r\n                    changed = {(event) => this.onchangeHandler(event, formElement.id)}\r\n                    label = {formElement.config.label}\r\n                    />\r\n                })}\r\n                <div className = {classes.ButtonContainer}>\r\n                    <Button>Create Product</Button>\r\n                </div> \r\n                </Aux>\r\n            )\r\n        }\r\n        else {\r\n            formBody = <Spinner />\r\n        }\r\n\r\n        let form = (\r\n            <form className = {classes.ProductForm} onSubmit = {this.onSubmitProduct}>\r\n                <h2>Create Product</h2>\r\n                {formBody}\r\n            </form>\r\n        )\r\n\r\n        let redirectLink = null;\r\n        if(this.props.redirected) {\r\n            redirectLink = <Redirect to ={this.props.redirectPath}/>\r\n        }\r\n        return (\r\n            <div className = {classes.formContainer}>\r\n                {redirectLink}\r\n                {form}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.token,\r\n        redirectPath: state.redirectLink,\r\n        redirected: state.redirected\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onRedirect: (path) => dispatch(actions.redirect(path))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostProduct);","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport classes from './SignIn.module.css';\r\nimport Input from '../../component/UI/Input/Input';\r\nimport Button from '../../component/UI/Button/Button';\r\nimport * as actions from '../../store/actions/index';\r\nimport Spinner from '../../component/UI/Spinner/Spinner';\r\nimport Aux from '../../hoc/Auxillary/Auxillary';\r\n\r\n\r\n\r\nclass SignIn extends Component {\r\n\r\n    state = {\r\n        signInForm: {\r\n            username: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Username',\r\n                    required: true\r\n                },\r\n                value: ''\r\n            },\r\n            // email: {\r\n            //     elementType: 'input',\r\n            //     elementConfig: {\r\n            //         type: 'email',\r\n            //         placeholder: 'Your Email',\r\n            //         required: true\r\n            //     },\r\n            //     value: ''\r\n            // },\r\n            password: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'password',\r\n                    placeholder: 'Your Password',\r\n                    required: true\r\n                },\r\n                value: ''\r\n            }\r\n        },\r\n        errmsg: '',\r\n        loading: false\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.props.onRedirectReset();\r\n    }\r\n\r\n    errorHandler = (errMessageServer) => {\r\n        let copiedErrorMessage = this.state.errmsg;\r\n        copiedErrorMessage = errMessageServer;\r\n        this.setState({errmsg: copiedErrorMessage})\r\n    }\r\n    onchangeHandler = (event, element) => {\r\n        let copiedErrMsg = this.state.errmsg;\r\n        copiedErrMsg = '';\r\n        const copiedSignInForm = {...this.state.signInForm};\r\n\r\n        const copiedchangedElement = {...copiedSignInForm[element]};\r\n\r\n        copiedchangedElement.value = event.target.value;\r\n        copiedSignInForm[element] = copiedchangedElement;\r\n        this.setState({signInForm: copiedSignInForm});\r\n        this.setState({errmsg: copiedErrMsg});\r\n    }\r\n\r\n    onSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        this.setState({loading: true})\r\n        let loginDetails = {\r\n            username: this.state.signInForm.username.value,\r\n            password: this.state.signInForm.password.value\r\n        }\r\n        axios.post('https://restapi-4u.herokuapp.com/login/', loginDetails)\r\n        .then((response) => {\r\n            localStorage.setItem('token', response.data.token);\r\n            this.props.onAuthSuccessfull(response.data.token);\r\n            this.setState({loading: false});\r\n            this.props.onRedirect('/');\r\n        })\r\n        .catch((err) => {\r\n            this.setState({loading: false})\r\n            this.errorHandler(err.response.data.non_field_errors[0]);\r\n        })\r\n    }\r\n\r\n    render () {\r\n\r\n        let formElements = [];\r\n\r\n        for(let key in this.state.signInForm) {\r\n            formElements.push({\r\n                id: key,\r\n                config: this.state.signInForm[key]\r\n            });\r\n        }\r\n\r\n        let formElement = null;\r\n\r\n        if(!this.state.loading){\r\n            formElement = (<Aux>\r\n                {formElements.map((formElement) => {\r\n                    return <Input key = {formElement.id} \r\n                            elementType = {formElement.config.elementType}\r\n                            elementConfig = {formElement.config.elementConfig}\r\n                            value = {formElement.config.value}\r\n                            label = {formElement.id}\r\n                            changed = {(event) => this.onchangeHandler(event, formElement.id)}/>\r\n                })}\r\n                <small className = {classes.Small}>{this.state.errmsg}</small>\r\n                <div className = {classes.ButtonContainer}>\r\n                    <Button >Sign In</Button>\r\n                </div>\r\n            </Aux>);\r\n        }\r\n        else {\r\n            formElement = <Spinner />\r\n        }\r\n\r\n        let redirectElement = null;\r\n\r\n        if(this.props.redirected){\r\n            redirectElement = <Redirect to = {this.props.redirectlink}/>\r\n        }\r\n\r\n        let form = (\r\n            <form className = {classes.SignInForm} onSubmit = {this.onSubmitHandler}>\r\n                <h2>Sign In</h2>\r\n                {formElement}\r\n            </form>\r\n        )\r\n        return (\r\n            <div className = {classes.FormContainer}>\r\n                {redirectElement}\r\n                {form}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        redirectlink: state.redirectLink,\r\n        redirected: state.redirected\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onRedirectReset: () => dispatch(actions.resetRedirect()),\r\n        onRedirect: (path) => dispatch(actions.redirect(path)),\r\n        onAuthSuccessfull: ( token ) => dispatch(actions.authSuccessful(token)),\r\n    }\r\n    \r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import React, { Component} from 'react';\nimport Products from './container/Products/Products';\nimport SignUp from './container/SignUp/SignUp';\nimport Layout from './component/Layout/Layout';\nimport PostProduct from './container/PostProduct/PostProduct';\nimport { connect } from 'react-redux';\n\nimport { Route, Switch} from 'react-router-dom';\nimport SignIn from './container/SignIn/SignIn';\nimport * as actions from './store/actions/index';\n\nclass App extends Component {\n  componentDidMount() {\n    if(localStorage.getItem('token')){\n      if(this.props.token === '') {\n        this.props.onAuthSuccessful(localStorage.getItem('token'))\n      }\n    }else{\n      this.props.onAuthFail();\n    }\n  }\n  render () {\n    return (\n      <div>\n         <Layout>\n            <Switch>\n              <Route path = '/post-product' component = {PostProduct} />\n              <Route path = '/signup' component = {SignUp}/>\n              <Route path = '/signin' component = {SignIn}/>\n              <Route path = '/' exact component = {Products}/>\n            </Switch>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.token\n  }\n}\n  \nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuthSuccessful: (token) => dispatch(actions.authSuccessful(token)),\n    onAuthFail: () => dispatch(actions.authFail())\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import  * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    redirectLink: '/',\r\n    redirected: false,\r\n    token: '',\r\n    authenticated: false\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.REDIRECT:\r\n            return {\r\n                ...state,\r\n                redirectLink: action.redirectLink,\r\n                redirected: true\r\n            }\r\n        \r\n        case actionTypes.RESET_REDIRECT:\r\n            return {\r\n                ...state,\r\n                redirectLink: '/',\r\n                redirected: false\r\n            }\r\n        case actionTypes.AUTH_SUCCESSFUL:\r\n            return {\r\n                ...state,\r\n                token: action.token,\r\n                authenticated: true\r\n            }\r\n        case actionTypes.AUTH_FAIL:\r\n            return {\r\n                ...state,\r\n                token: '',\r\n                authenticated: false\r\n            }\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore} from 'redux';\nimport { Provider } from 'react-redux'\n\nimport reducer from './store/reducers/auth';\n\nconst store = createStore(reducer, \n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()    \n  ); \n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n      <BrowserRouter>\n          <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}